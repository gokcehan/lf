# interpreter for shell commands
set shell pwsh

# allow the usage of $args inside shell commands
set shellflag "-cwa"

# speed up Powershell by skipping the profile
set shellopts "-nop"

# Shell commands with multiline definitions and/or positional arguments and/or
# quotes only partly work in Windows. For anything but the simplest shell commands,
# it is recommended to create separate script files and simply call them here
# in commands or mappings.
#
# Also, the default commands and keybindings are defined using cmd syntax (i.e. '%EDITOR%')
# which does not work with Powershell. Therefore, you need to override these
# with explicit choices accordingly.

# change the default commands and keybindings to work in Powershell
cmd open &&$Env:OPENER.Trim('"', ' ') "$Env:f"
map e $&$Env:EDITOR "$Env:f"
map i !&$Env:PAGER "$Env:f"
map w $&$Env:SHELL
cmd doc !&$Env:lf.Trim('"', ' ') -doc | &$Env:PAGER
map <f-1> doc
cmd maps !&$Env:lf.Trim('"', ' ') -remote "query $Env:id maps" | &$Env:PAGER
cmd cmaps !&$Env:lf.Trim('"', ' ') -remote "query $Env:id cmaps" | &$Env:PAGER
cmd cmds !&$Env:lf.Trim('"', ' ') -remote "query $Env:id cmds" | &$Env:PAGER

# change the editor used in default editor keybinding
# There is no builtin terminal editor installed in Windows. The default editor
# mapping uses 'notepad' which launches in a separate GUI window. You may
# instead install a terminal editor of your choice and replace the default
# editor keybinding accordingly.
map e $vim $Env:f

# change the pager used in default pager keybinding
# The standard pager used in Windows is 'more' which is not a very capable
# pager. You may instead install a pager of your choice and replace the default
# pager keybinding accordingly.
map i $less $Env:f

# change the shell used in default shell keybinding
map w $powershell

# change 'doc' command to use a different pager
cmd doc $lf -doc | less

# leave some space at the top and the bottom of the screen
set scrolloff 10

# use enter for shell commands
map <enter> shell
